# Default values for mpd-dlna-yamaha-avr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: "ghcr.io/matgoebl/mpd-dlna-yamaha-avr"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 6600                          # External port of Music Player Daemon for clients.
  streamport: 6601                    # External port of Music Player Stream, that is sent to yamaha receiver for playback.
  streamhostExternal: "127.0.0.1"     # External hostname/IP of Music Player Stream, that is sent to yamaha receiver for playback.

mpd:
  persistentVolumeClaimName: ""       # Mount persistentVolumeClaim as music directory, playlists are expected as playlists/ subfolder there.

yamaha:
  host: "127.0.0.1"                   # Hostname/IP of Yamaha AVR Receiver.
  maxVolumeDb: "60"                   # Maximum AVR volume in dB for mpd volume of 100%.
  surroundProgram: "Straight"         # Surround program to be set when switching to DLNA playback.

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
