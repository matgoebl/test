apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mpd-dlna-yamaha-avr.fullname" . }}
  labels:
    {{- include "mpd-dlna-yamaha-avr.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "mpd-dlna-yamaha-avr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mpd-dlna-yamaha-avr.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mpd-dlna-yamaha-avr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-player-controller
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/mpd-dlna-yamaha-avr.py"]
          env:
          - name: MPD_HOST
            value: "127.0.0.1"
          - name: MPD_PORT
            value: "6600"
          - name: MPD_STREAM_HOSTPORT
            value: "{{ .Values.service.streamhostExternal }}:{{ .Values.service.streamport }}"
          - name: YAMAHA_HOST
            value: {{ .Values.yamaha.host | quote }}
          - name: VERBOSE
            value: "1"
          - name: MAX_VOLUME_DB
            value: {{ .Values.yamaha.maxVolumeDb | quote }}
          - name: SURROUND_PROGRAM
            value: {{ .Values.yamaha.surroundProgram | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/mpd", "--no-daemon", "--stdout"]
          ports:
            - name: mpd
              containerPort: 6600
              protocol: TCP
            - name: stream
              containerPort: 6601
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: mpd
          readinessProbe:
            tcpSocket:
              port: mpd
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: "/var/log/mpd/data"
              readOnly: false
            - name: music
              mountPath: "/var/lib/mpd/music"
              readOnly: true
      volumes:
        - name: data
          emptyDir: {}
        - name: music
{{- if .Values.mpd.persistentVolumeClaimName }}
          persistentVolumeClaim:
            claimName: {{ .Values.mpd.persistentVolumeClaimName | quote }}
{{- else }}
          emptyDir: {}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
